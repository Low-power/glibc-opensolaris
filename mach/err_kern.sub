/* 
 * Mach Operating System
 * Copyright (c) 1991,1990,1989 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */
/*
 * HISTORY
 * $Log$
 * Revision 1.3  1993/12/01 09:28:37  mib
 * Formerly ../mach/err_kern.sub.~3~
 *
 * Revision 2.3  92/04/01  19:38:02  rpd
 * 	Added err_codes_device.
 * 	[92/03/09            rpd]
 * 
 * Revision 2.2  92/01/16  00:08:50  rpd
 * 	Moved from user collection to mk collection.
 * 
 * Revision 2.3  91/08/29  15:51:22  rpd
 * 	Updated err_codes_kern.
 * 	[91/08/15            rpd]
 * 
 * Revision 2.2  91/03/27  16:05:27  mrt
 * 	First checkin
 * 
 */
/*
 *	File: 	err_kern.sub
 *	Author:	Douglas Orr, Carnegie Mellon University
 *	Date:	Mar, 1988
 *
 *	error codes for Mach and Unix kernels
 */

static char * err_codes_kern[] = {
	"(os/kern) successful",
	"(os/kern) invalid address",
	"(os/kern) protection failure",
	"(os/kern) no space available",
	"(os/kern) invalid argument",
	"(os/kern) failure",
	"(os/kern) resource shortage",
	"(os/kern) not receiver",
	"(os/kern) no access",
	"(os/kern) memory failure",
	"(os/kern) memory error",
	"(os/kern) already in set",
	"(os/kern) not in set",
	"(os/kern) name exists",
	"(os/kern) aborted",
	"(os/kern) invalid name",
	"(os/kern) invalid task",
	"(os/kern) invalid right",
	"(os/kern) invalid value",
	"(os/kern) urefs overflow",
	"(os/kern) invalid capability",
	"(os/kern) right exists",
	"(os/kern) invalid host",
	"(os/kern) memory present",
};

static char * err_codes_device[] = {
	"(os/device) hardware IO error",
	"(os/device) operation would block",
	"(os/device) no such device",
	"(os/device) device already open",
	"(os/device) device is shut down",
	"(os/device) invalid operation",
	"(os/device) invalid record number",
	"(os/device) invalid IO size",
	"(os/device) memory allocation failure",
	"(os/device) read only",
};

#include <stdio.h>
#include <errno.h>

static struct error_subsystem err_kern_sub[] = {
	{
	"(os/kern)",
	errlib_count(err_codes_kern),
	err_codes_kern,
	},
	{
	"(os/device)",
	errlib_count(err_codes_device),
	err_codes_device,
	},
	{
	"(os/?)",
	0,
	},
	{
	"(os/hurd)",
	_HURD_ERRNOS,
#ifndef HAVE_GNU_LD
#define _sys_errlist sys_errlist
#endif
	(const char * const *) _sys_errlist,
	},
};
