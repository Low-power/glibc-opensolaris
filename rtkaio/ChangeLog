2004-04-17  Jakub Jelinek  <jakub@redhat.com>

	* rt/Makefile (mq-routines): Set.
	(librt-routines): Use it.
	(tests): Add tst-mqueue{1,2,3,4,5,6,7} and tst-timer{3,4}.
	(tst-mqueue7-ARGS): Set.
	* rt/Versions (librt): Add mq_*@@GLIBC_2.3.4.
	* rt/tst-mqueue1.c: New file.
	* rt/tst-mqueue2.c: New file.
	* rt/tst-mqueue3.c: New file.
	* rt/tst-mqueue4.c: New file.
	* rt/tst-mqueue5.c: New file.
	* rt/tst-mqueue6.c: New file.
	* rt/tst-mqueue7.c: New file.
	* rt/tst-timer3.c: New file.
	* rt/tst-timer4.c: New file.

2003-08-14  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/kaio_misc.c (wait_for_kernel_requests):
	New function.
	(handle_fildes_io): Use it for LIO_SYNC and LIO_DSYNC.

	* sysdeps/pthread/Makefile (CPPFLAGS): Add -DBROKEN_THREAD_SIGNALS
	for rtkaio/linuxthreads combo.
	* sysdeps/unix/sysv/linux/kaio_misc.c (__aio_enqueue_request_ctx):
	Only set caller_pid if BROKEN_THREAD_SIGNALS.
	* sysdeps/unix/sysv/linux/kaio_misc.h (struct waitlist,
	struct requestlist): Remove caller_pid unless BROKEN_THREAD_SIGNALS.
	(__aio_notify_only): Remove last argument if not
	BROKEN_THREAD_SIGNALS.
	* sysdeps/unix/sysv/linux/kaio_suspend.c (aio_suspend): Only set
	caller_pid if not BROKEN_THREAD_SIGNALS.
	* sysdeps/unix/sysv/linux/klio_listio.c (lio_listio): Likewise.
	Remove last argument in call to __aio_notify_only unless
	BROKEN_THREAD_SIGNALS.

	* tst-aio.c: Avoid test duplication.  Include rt/aio.c instead.
	* tst-aio2.c: Similarly.
	* tst-aio3.c: Similarly.
	* tst-aio4.c: Similarly.
	* tst-aio5.c: Similarly.
	* tst-aio6.c: Similarly.
	* tst-aio64.c: Similarly.
	* tst-aio7.c: Similarly.
	* tst-clock.c: Similarly.
	* tst-clock_nanosleep.c: Similarly.
	* tst-shm.c: Similarly.
	* tst-timer2.c: Similarly.

2003-07-29  Roland McGrath  <roland@redhat.com>

	* rt/tst-timer2.c: New file.
	* rt/Makefile (tests): Add it.

2003-07-25  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/kaio_cancel.c (aio_cancel): Attempt
	to cancel kioctx != KCTX_NONE requests even if second argument
	to aio_cancel is NULL.

2003-07-24  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/unix/sysv/linux/kaio_cancel.c (aio_cancel): Return
	AIO_ALLDONE if aiocbp != NULL and has already completed.  Return
	-1/EINVAL if aiocbp->aio_fildes does not match fildes.

	* sysdeps/unix/sysv/linux/alpha/kaio_cancel.c: New file.
	* sysdeps/unix/sysv/linux/hppa/kaio_cancel.c: New file.
	* sysdeps/unix/sysv/linux/sparc/kaio_cancel.c: New file.
	* sysdeps/unix/sysv/linux/kaio_cancel.c (aio_cancel): Attempt
	to cancel request handled by kernel (so far just if aiocbp != NULL).
	* sysdeps/unix/sysv/linux/kaio_misc.c (__aio_remove_krequest): Fix
	assertion, req->kioctx must NOT be KCTX_NONE.
	* sysdeps/unix/sysv/linux/kaio_misc.h (__aio_remove_krequest): New
	prototype.

2003-07-23  Jakub Jelinek  <jakub@redhat.com>

	* New add-on.
